<div class="card">
    <div class="card-header card-inverse bg-danger">
        <h5>Announcements</h5>
    </div>
    <div class="card-block">
        <ul>
            <li><strong>Welcome to the beta!</strong> We are working hard to get things up to speed. If you see something wonky send me an email. If you don't know how to email me, then how did you get here?!</li>
            <li><strong>This is the patient's section of the app.</strong> There are also sections for providers (Doctors, nurses, councilors, lab peeps) and adminstration (office folks and management). The data we get from you is presented to the other sections as appropriate. Not much going on over there just yet but if you want to check out that side of thigns let me know!</li>
            <li><strong>You will get emails from us asking you to take care of your alerts.</strong> Please take the actions listed in the alerts tab even if the info you fill in right now is fake. It will help us stub all the features out with real people looking at them.</li>
            
        </ul>
    </div>
</div>

<div class="card">
    <div class="card-header card-inverse bg-danger">
        <h5>Change Log</h5>
    </div>
    <div class="card-block">
        <ul>
            <li><strong>3/10/2016 - Added Problem Section</strong> This section talks about the problems in the healthcare industry that we are trying to solve. Check it out!</li>
            <li><strong>3/7/2016 - Bested Devise!!!</strong> I understand fully that nobody cares about this but me, but I finally worked out all the kinks of switching to a new ORM. Using Sequel with Devise (The authentication library we use, it handles sign in and sign out, creating accounts, sessions, etc) was much harder than expected.
            Sure it was not so hard to get it up and running for the basic functionality, but extending devise at all with Sequel threw me for a loop! But no longer!!!!!</li>
            <li><strong>3/3/2016 - New Alert System</strong> We just reworked the alert system. It was sort of "soft" alert count in that it would go behind the scenes and check various data states and create alerts as appropriate.
             However that is a waste of resources since why do you need to check the same data points every time a page is refreshed long after you have taken care of the alert? Now each alert gets it's own database entry which should cut down on
             our resource usage and also allow for more nuanced alerts. Plus we can now track how quickly you take care of your alerts which might be helpful.</li>
            <li><strong>3/1/2016 - Entirely New App!</strong> Things may look similar to last month but we have been hard at work swithching out the backend. We had been using MongoDB as our database as the schemaless nature of document stores
            seemed like a good fit to the kind of data we care about. However after testing this technology I decided it was not going to work out. First, MongoDB preallocates huge DB files for small amounts of data. Our development database has almost 1 GB in files
            despite a very small actual dataset. Two, MongoDB has no joins! While it was going to be great for our more flexible data stores, every orginization has relational data. How to handle it well in MongoDB?
            Schemaless is a missnomer! While it is true that there was no defined schema in MongoDB, you ended up creating a schema at the model level. Granted it is really easy to add fields since it only has to be handled at the model level,
             but in the end you have a schema anyway. If I am going to have to make a schema no matter what, might as well have a relational database. Lastly, Postgresql also does "schemaless" tables, as well
            as being a battle tested relational database.  In combination with the Sequel ORM we can do anything with Postgresql that could be done in MongoDB, and all kinds of things that could not be done as well.</li>
            <li><strong>3/1/2016 - Started Change Log</strong> We are making lots of changes and we thought some of you might like to know what is going on.</li>
        </ul>
    </div>
</div>